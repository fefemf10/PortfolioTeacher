@page "/deputy"
@attribute [Authorize(Roles = nameof(Roles.Deputy))]
@using Blazorise.DataGrid;
@using PortfolioShared.ViewModels.Request
@using PortfolioShared.ViewModels.Response
@using PortfolioShared.Models
@using PortfolioSite.Shared.Localization;
@inject IStringLocalizer<Deputy> localizer
@inject IStringLocalizer<TeacherInfos> teacherInfosLocalizer
@inject IHttpClientFactory httpFactory
@inject AuthenticationStateProvider authenticationStateProvider
<PageTitle>@localizer["Title"]</PageTitle>
<Heading TextAlignment="TextAlignment.Center">@localizer["Title"]</Heading>

<DataGrid TItem="RequestTeacher"
          Data="@requestTeachers"
		  ShowPager
		  ShowPageSizes
          @ref="@dataGrid">
    <DataGridCommandColumn />
    <DataGridColumn Field="@nameof(RequestTeacher.Email)" Caption=@teacherInfosLocalizer["Email"] Editable />
    <DataGridColumn Field="@nameof(RequestTeacher.LastName)" Caption=@teacherInfosLocalizer["LastName"] Editable />
    <DataGridColumn Field="@nameof(RequestTeacher.FirstName)" Caption=@teacherInfosLocalizer["FirstName"] Editable />
    <DataGridColumn Field="@nameof(RequestTeacher.MiddleName)" Caption=@teacherInfosLocalizer["MiddleName"] Editable />
    <DataGridColumn Field="@nameof(RequestTeacher.Post)" Caption=@teacherInfosLocalizer["Post"] Editable />
    <DataGridColumn Field="@nameof(RequestTeacher.PublicationCount)" Caption=@teacherInfosLocalizer["PublicationCount"] Editable />
</DataGrid>
@code {
    List<RequestTeacher>? requestTeachers;
    DataGrid<RequestTeacher> dataGrid;
    HttpClient webapi;
    Guid guid;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        webapi = httpFactory.CreateClient("PortfolioServer");
        var state = await authenticationStateProvider.GetAuthenticationStateAsync();
        if (Guid.TryParse(state.User.FindFirstValue("sub"), out guid))
        {
            ResponseTeacher user = await webapi.GetFromJsonAsync<ResponseTeacher>($"Teacher/{guid.ToString()}/GetInfo");
            requestTeachers = await webapi.GetFromJsonAsync<List<RequestTeacher>>($"Department/{user.Department.Id}/GetTeacher");
        }
    }
}
