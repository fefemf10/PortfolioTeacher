@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IdentityServer.Pages.Account.Login.Index
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
<div class="login-page">
	<partial name="_ValidationSummary"/>

	<div class="row">
		@if (Model.View.EnableLocalLogin)
		{
			<div class="col-sm-6">
				<div class="card">
					<div class="card-header">
						<h2>@localizer["Header"]</h2>
					</div>

					<div class="card-body">
						<form asp-page="/Account/Login/Index">
							<input type="hidden" asp-for="Input.ReturnUrl"/>

							<div class="form-group">
								<label asp-for="Input.Email">@localizer["InputEmail"]</label>
								<input type="email" class="form-control" placeholder="@localizer["InputEmail"]" asp-for="Input.Email" autofocus>
							</div>
							<div class="form-group">
								<label asp-for="Input.Password">@localizer["InputPassword"]</label>
								<input type="password" class="form-control" placeholder="@localizer["InputPassword"]" asp-for="Input.Password" autocomplete="off">
							</div>

							@if (Model.View.AllowRememberLogin)
							{
								<div class="form-group">
									<div class="form-check">
										<input class="form-check-input" asp-for="Input.RememberLogin">
										<label class="form-check-label" asp-for="Input.RememberLogin">
											@localizer["RememberLogin"]
										</label>
									</div>
								</div>
							}
							<a asp-page="../Register/Index" asp-route-returnUrl="@Model.Input.ReturnUrl">
								@localizer["ButtonNewUser"]
							</a><br />
							<button class="btn btn-primary" name="Input.Button" value="login">@localizer["ButtonLogin"]</button>
							<button class="btn btn-secondary" name="Input.Button" value="cancel">@localizer["ButtonCancel"]</button>
						</form>
					</div>
				</div>
			</div>
		}

		@if (Model.View.VisibleExternalProviders.Any())
		{
			<div class="col-sm-6">
				<div class="card">
					<div class="card-header">
						<h2>External Account</h2>
					</div>
					<div class="card-body">
						<ul class="list-inline">
							@foreach (var provider in Model.View.VisibleExternalProviders)
							{
								<li class="list-inline-item">
									<a class="btn btn-secondary"
									   asp-page="/ExternalLogin/Challenge"
									   asp-route-scheme="@provider.AuthenticationScheme"
									   asp-route-returnUrl="@Model.Input.ReturnUrl">
										@provider.DisplayName
									</a>
								</li>
							}
						</ul>
					</div>
				</div>
			</div>
		}

		@if (!Model.View.EnableLocalLogin && !Model.View.VisibleExternalProviders.Any())
		{
			<div class="alert alert-warning">
				<strong>Invalid login request</strong>
				There are no login schemes configured for this request.
			</div>
		}
	</div>
</div>